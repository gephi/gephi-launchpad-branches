/*
Copyright 2008-2011 Gephi
Authors : Taras Klaskovsky <megaterik@gmail.com>
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gephi.lsg_generator;

import org.gephi.lib.validation.ValidationClient;
import org.netbeans.validation.api.builtin.Validators;
import org.netbeans.validation.api.ui.ValidationGroup;
import org.netbeans.validation.api.ui.ValidationPanel;

/**
 *
 * @author megaterik
 */
public class LargeSimpleGraphPanel extends javax.swing.JPanel implements ValidationClient {

    /** Creates new customizer LargeSimpleGraphPanel */
    public LargeSimpleGraphPanel() {
        initComponents();
    }

    void getFields(LargeSimpleGraph generator) {
        try {
            generator.setExponent(Double.parseDouble(exponentTextField.getText()));
            generator.setMaxDegree(Integer.parseInt(maxDegreeTextField.getText()));
            generator.setMinDegree(Integer.parseInt(minDegreeTextField.getText()));
            generator.setNumberOfNodes(Integer.parseInt(nodesTextField.getText()));
        } catch (Exception ex) {
        }
    }

    void setFields(LargeSimpleGraph generator) {
        exponentTextField.setText(Double.toString(generator.getExponent()));
        minDegreeTextField.setText(Integer.toString(generator.getMinDegree()));;
        maxDegreeTextField.setText(Integer.toString(generator.getMaxDegree()));
        nodesTextField.setText(Integer.toString(generator.getNumberOfNodes()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nodesTextField = new javax.swing.JTextField();
        minDegreeTextField = new javax.swing.JTextField();
        maxDegreeTextField = new javax.swing.JTextField();
        exponentTextField = new javax.swing.JTextField();
        nodesLabel = new javax.swing.JLabel();
        minDegreeLabel = new javax.swing.JLabel();
        maxDegreeLabel = new javax.swing.JLabel();
        exponentLabel = new javax.swing.JLabel();

        nodesLabel.setText(org.openide.util.NbBundle.getMessage(LargeSimpleGraphPanel.class, "nodeLabel.text")); // NOI18N

        minDegreeLabel.setText(org.openide.util.NbBundle.getMessage(LargeSimpleGraphPanel.class, "minDegreeLabel.text")); // NOI18N

        maxDegreeLabel.setText(org.openide.util.NbBundle.getMessage(LargeSimpleGraphPanel.class, "maxDegreeLabel.text")); // NOI18N

        exponentLabel.setText(org.openide.util.NbBundle.getMessage(LargeSimpleGraphPanel.class, "exponentLabel.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(nodesLabel)
                    .add(minDegreeLabel)
                    .add(maxDegreeLabel)
                    .add(exponentLabel))
                .add(43, 43, 43)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(nodesTextField)
                    .add(exponentTextField)
                    .add(maxDegreeTextField)
                    .add(minDegreeTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nodesLabel)
                    .add(nodesTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(minDegreeLabel)
                    .add(minDegreeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(maxDegreeLabel)
                    .add(maxDegreeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(exponentLabel)
                    .add(exponentTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel exponentLabel;
    private javax.swing.JTextField exponentTextField;
    private javax.swing.JLabel maxDegreeLabel;
    private javax.swing.JTextField maxDegreeTextField;
    private javax.swing.JLabel minDegreeLabel;
    private javax.swing.JTextField minDegreeTextField;
    private javax.swing.JLabel nodesLabel;
    private javax.swing.JTextField nodesTextField;
    // End of variables declaration//GEN-END:variables

    public static ValidationPanel createValidationPanel(LargeSimpleGraphPanel innerPanel) {
        ValidationPanel validationPanel = new ValidationPanel();
        validationPanel.setInnerComponent(innerPanel);

        ValidationGroup group = validationPanel.getValidationGroup();
        innerPanel.validate(group);

        return validationPanel;
    }

    @Override
    public void validate(ValidationGroup group) {
        group.add(minDegreeTextField, Validators.REQUIRE_NON_EMPTY_STRING, Validators.REQUIRE_VALID_INTEGER, Validators.numberRange(1, Integer.MAX_VALUE));
        group.add(maxDegreeTextField, Validators.REQUIRE_NON_EMPTY_STRING, Validators.REQUIRE_VALID_INTEGER, Validators.numberRange(1, Integer.MAX_VALUE));
        group.add(exponentTextField, Validators.REQUIRE_NON_EMPTY_STRING, Validators.REQUIRE_VALID_NUMBER);
        group.add(nodesTextField, Validators.REQUIRE_NON_EMPTY_STRING, Validators.REQUIRE_VALID_INTEGER, Validators.numberRange(1, Integer.MAX_VALUE));
    }
}
