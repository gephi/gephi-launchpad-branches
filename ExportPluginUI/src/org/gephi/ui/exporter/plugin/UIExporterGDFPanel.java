/*
Copyright 2008-2010 Gephi
Authors : Mathieu Bastian <mathieu.bastian@gephi.org>
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
*/
package org.gephi.ui.exporter.plugin;

import org.gephi.io.exporter.plugin.ExporterGDF;

/**
 *
 * @author Mathieu Bastian
 */
public class UIExporterGDFPanel extends javax.swing.JPanel {

    /** Creates new form UIExporterGDFPanel */
    public UIExporterGDFPanel() {
        initComponents();
    }

    public void setup(ExporterGDF exporterGDF) {
        colorsExportCheckbox.setSelected(exporterGDF.isExportColors());
        positionExportCheckbox.setSelected(exporterGDF.isExportPosition());
        attributesExportCheckbox.setSelected(exporterGDF.isExportAttributes());
        normalizeCheckbox.setSelected(exporterGDF.isNormalize());
        quotesCheckbox.setSelected(exporterGDF.isUseQuotes());
        simpleQuotesCheckbox.setSelected(exporterGDF.isSimpleQuotes());
        visibilityCheckbox.setSelected(exporterGDF.isExportVisibility());
    }

    public void unsetup(ExporterGDF exporterGDF) {
        exporterGDF.setExportAttributes(attributesExportCheckbox.isSelected());
        exporterGDF.setExportColors(colorsExportCheckbox.isSelected());
        exporterGDF.setExportPosition(positionExportCheckbox.isSelected());
        exporterGDF.setNormalize(normalizeCheckbox.isSelected());
        exporterGDF.setUseQuotes(quotesCheckbox.isSelected());
        exporterGDF.setSimpleQuotes(simpleQuotesCheckbox.isSelected());
        exporterGDF.setExportVisibility(visibilityCheckbox.isSelected());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        labelExport = new javax.swing.JLabel();
        positionExportCheckbox = new javax.swing.JCheckBox();
        colorsExportCheckbox = new javax.swing.JCheckBox();
        attributesExportCheckbox = new javax.swing.JCheckBox();
        quotesCheckbox = new javax.swing.JCheckBox();
        labelQuotes = new javax.swing.JLabel();
        normalizeCheckbox = new javax.swing.JCheckBox();
        labelNormalize = new javax.swing.JLabel();
        simpleQuotesCheckbox = new javax.swing.JCheckBox();
        labelQuotes1 = new javax.swing.JLabel();
        visibilityCheckbox = new javax.swing.JCheckBox();

        labelExport.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.labelExport.text")); // NOI18N

        positionExportCheckbox.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.positionExportCheckbox.text")); // NOI18N

        colorsExportCheckbox.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.colorsExportCheckbox.text")); // NOI18N

        attributesExportCheckbox.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.attributesExportCheckbox.text")); // NOI18N

        quotesCheckbox.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.quotesCheckbox.text")); // NOI18N
        quotesCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quotesCheckboxActionPerformed(evt);
            }
        });

        labelQuotes.setFont(new java.awt.Font("Tahoma", 0, 10));
        labelQuotes.setForeground(new java.awt.Color(102, 102, 102));
        labelQuotes.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.labelQuotes.text")); // NOI18N

        normalizeCheckbox.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.normalizeCheckbox.text")); // NOI18N

        labelNormalize.setFont(new java.awt.Font("Tahoma", 0, 10));
        labelNormalize.setForeground(new java.awt.Color(102, 102, 102));
        labelNormalize.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.labelNormalize.text")); // NOI18N

        simpleQuotesCheckbox.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.simpleQuotesCheckbox.text")); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, quotesCheckbox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), simpleQuotesCheckbox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        labelQuotes1.setFont(new java.awt.Font("Tahoma", 0, 10));
        labelQuotes1.setForeground(new java.awt.Color(102, 102, 102));
        labelQuotes1.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.labelQuotes1.text")); // NOI18N

        visibilityCheckbox.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.visibilityCheckbox.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(simpleQuotesCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelQuotes1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelExport)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(positionExportCheckbox)
                            .addComponent(colorsExportCheckbox)
                            .addComponent(attributesExportCheckbox)
                            .addComponent(visibilityCheckbox)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(normalizeCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelNormalize))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quotesCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelQuotes)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelExport)
                    .addComponent(positionExportCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(colorsExportCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attributesExportCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visibilityCheckbox)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(normalizeCheckbox)
                    .addComponent(labelNormalize))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quotesCheckbox)
                    .addComponent(labelQuotes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpleQuotesCheckbox)
                    .addComponent(labelQuotes1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void quotesCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quotesCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quotesCheckboxActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox attributesExportCheckbox;
    private javax.swing.JCheckBox colorsExportCheckbox;
    private javax.swing.JLabel labelExport;
    private javax.swing.JLabel labelNormalize;
    private javax.swing.JLabel labelQuotes;
    private javax.swing.JLabel labelQuotes1;
    private javax.swing.JCheckBox normalizeCheckbox;
    private javax.swing.JCheckBox positionExportCheckbox;
    private javax.swing.JCheckBox quotesCheckbox;
    private javax.swing.JCheckBox simpleQuotesCheckbox;
    private javax.swing.JCheckBox visibilityCheckbox;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
