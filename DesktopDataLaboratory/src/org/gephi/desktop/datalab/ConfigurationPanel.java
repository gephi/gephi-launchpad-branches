/*
Copyright 2008-2010 Gephi
Authors : Mathieu Bastian <mathieu.bastian@gephi.org>, Mathieu Jacomy, Julian Bilcke, Eduardo Ramos
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gephi.desktop.datalab;

/**
 * Configurations dialog for DataTableTopComponent
 * @author Eduardo Ramos <eduramiba@gmail.com>
 */
public class ConfigurationPanel extends javax.swing.JPanel {

    private DataTableTopComponent dataTableTopComponent;

    /** Creates new form ConfigurationPanel */
    public ConfigurationPanel(DataTableTopComponent dataTableTopComponent) {
        this.dataTableTopComponent=dataTableTopComponent;
        initComponents();
        onlyVisibleCheckBox.setSelected(dataTableTopComponent.isShowOnlyVisible());
        useSparklinesCheckBox.setSelected(dataTableTopComponent.isUseSparklines());
        showEdgesNodesLabelsCheckBox.setSelected(dataTableTopComponent.isShowEdgesNodesLabels());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        onlyVisibleCheckBox = new javax.swing.JCheckBox();
        useSparklinesCheckBox = new javax.swing.JCheckBox();
        showEdgesNodesLabelsCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        onlyVisibleCheckBox.setText(org.openide.util.NbBundle.getMessage(ConfigurationPanel.class, "ConfigurationPanel.onlyVisibleCheckBox.text")); // NOI18N
        onlyVisibleCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                onlyVisibleCheckBoxItemStateChanged(evt);
            }
        });

        useSparklinesCheckBox.setText(org.openide.util.NbBundle.getMessage(ConfigurationPanel.class, "ConfigurationPanel.useSparklinesCheckBox.text")); // NOI18N
        useSparklinesCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                useSparklinesCheckBoxItemStateChanged(evt);
            }
        });

        showEdgesNodesLabelsCheckBox.setText(org.openide.util.NbBundle.getMessage(ConfigurationPanel.class, "ConfigurationPanel.showEdgesNodesLabelsCheckBox.text")); // NOI18N
        showEdgesNodesLabelsCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showEdgesNodesLabelsCheckBoxItemStateChanged(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ConfigurationPanel.class, "ConfigurationPanel.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(onlyVisibleCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(useSparklinesCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showEdgesNodesLabelsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(onlyVisibleCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(useSparklinesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showEdgesNodesLabelsCheckBox)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void onlyVisibleCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_onlyVisibleCheckBoxItemStateChanged
        dataTableTopComponent.setShowOnlyVisible(onlyVisibleCheckBox.isSelected());
    }//GEN-LAST:event_onlyVisibleCheckBoxItemStateChanged

    private void useSparklinesCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_useSparklinesCheckBoxItemStateChanged
        dataTableTopComponent.setUseSparklines(useSparklinesCheckBox.isSelected());
    }//GEN-LAST:event_useSparklinesCheckBoxItemStateChanged

    private void showEdgesNodesLabelsCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showEdgesNodesLabelsCheckBoxItemStateChanged
        dataTableTopComponent.setShowEdgesNodesLabels(showEdgesNodesLabelsCheckBox.isSelected());
    }//GEN-LAST:event_showEdgesNodesLabelsCheckBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox onlyVisibleCheckBox;
    private javax.swing.JCheckBox showEdgesNodesLabelsCheckBox;
    private javax.swing.JCheckBox useSparklinesCheckBox;
    // End of variables declaration//GEN-END:variables

}
