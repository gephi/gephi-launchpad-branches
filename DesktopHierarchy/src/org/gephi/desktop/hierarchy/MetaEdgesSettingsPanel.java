/*
Copyright 2008-2010 Gephi
Authors : Mathieu Bastian <mathieu.bastian@gephi.org>
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
*/
package org.gephi.desktop.hierarchy;

/**
 *
 * @author Mathieu Bastian
 */
public class MetaEdgesSettingsPanel extends javax.swing.JPanel {

    /** Creates new form MetaEdgesSettingsPanel */
    public MetaEdgesSettingsPanel() {
        initComponents();
    }

    public boolean isAutoEdgesEnabled() {
        return autoMetaEdgesCheckbox.isSelected();
    }

    public boolean isSumBuilding() {
        return sumRadio.isSelected();
    }

    public boolean isAverageBuilding() {
        return avgRadio.isSelected();
    }

    public float getMinimum() {
        return (Float)minSpinner.getValue();
    }

    public float getMaximum() {
        return (Float)maxSpinner.getValue();
    }

    public void setMaximum(Float maximum) {
        maxSpinner.setValue(maximum);
    }

    public void setMinimum(Float minimum) {
        minSpinner.setValue(minimum);
    }
    
    public void setSumBuilding(boolean value) {
        sumRadio.setSelected(value);
        avgRadio.setSelected(!value);
    }
    
    public void setAverageBuilding(boolean value) {
        sumRadio.setSelected(value);
        avgRadio.setSelected(!value);
    }

    public void setAutoEdgesEnabled(boolean enabled) {
        autoMetaEdgesCheckbox.setSelected(enabled);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        jXHeader1 = new org.jdesktop.swingx.JXHeader();
        autoMetaEdgesCheckbox = new javax.swing.JCheckBox();
        labelBuilding = new javax.swing.JLabel();
        labelEnable = new javax.swing.JLabel();
        sumRadio = new javax.swing.JRadioButton();
        avgRadio = new javax.swing.JRadioButton();
        labelMin = new javax.swing.JLabel();
        minSpinner = new javax.swing.JSpinner();
        labelMax = new javax.swing.JLabel();
        maxSpinner = new javax.swing.JSpinner();

        jXHeader1.setDescription(org.openide.util.NbBundle.getMessage(MetaEdgesSettingsPanel.class, "MetaEdgesSettingsPanel.jXHeader1.description")); // NOI18N
        jXHeader1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/desktop/hierarchy/resources/metaedgessettings.png"))); // NOI18N
        jXHeader1.setTitle(org.openide.util.NbBundle.getMessage(MetaEdgesSettingsPanel.class, "MetaEdgesSettingsPanel.jXHeader1.title")); // NOI18N

        autoMetaEdgesCheckbox.setText(org.openide.util.NbBundle.getMessage(MetaEdgesSettingsPanel.class, "MetaEdgesSettingsPanel.autoMetaEdgesCheckbox.text")); // NOI18N
        autoMetaEdgesCheckbox.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        autoMetaEdgesCheckbox.setMargin(new java.awt.Insets(2, 0, 2, 2));

        labelBuilding.setText(org.openide.util.NbBundle.getMessage(MetaEdgesSettingsPanel.class, "MetaEdgesSettingsPanel.labelBuilding.text")); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, autoMetaEdgesCheckbox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), labelBuilding, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        labelEnable.setText(org.openide.util.NbBundle.getMessage(MetaEdgesSettingsPanel.class, "MetaEdgesSettingsPanel.labelEnable.text")); // NOI18N

        buttonGroup1.add(sumRadio);
        sumRadio.setText(org.openide.util.NbBundle.getMessage(MetaEdgesSettingsPanel.class, "MetaEdgesSettingsPanel.sumRadio.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, autoMetaEdgesCheckbox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), sumRadio, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        buttonGroup1.add(avgRadio);
        avgRadio.setText(org.openide.util.NbBundle.getMessage(MetaEdgesSettingsPanel.class, "MetaEdgesSettingsPanel.avgRadio.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, autoMetaEdgesCheckbox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), avgRadio, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        labelMin.setText(org.openide.util.NbBundle.getMessage(MetaEdgesSettingsPanel.class, "MetaEdgesSettingsPanel.labelMin.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, autoMetaEdgesCheckbox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), labelMin, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        minSpinner.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, autoMetaEdgesCheckbox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), minSpinner, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        labelMax.setText(org.openide.util.NbBundle.getMessage(MetaEdgesSettingsPanel.class, "MetaEdgesSettingsPanel.labelMax.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, autoMetaEdgesCheckbox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), labelMax, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        maxSpinner.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), null, Float.valueOf(1.0f)));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, autoMetaEdgesCheckbox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), maxSpinner, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXHeader1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEnable)
                    .addComponent(labelBuilding)
                    .addComponent(labelMin)
                    .addComponent(labelMax))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(avgRadio)
                    .addComponent(sumRadio)
                    .addComponent(autoMetaEdgesCheckbox)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(maxSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(minSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jXHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEnable, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autoMetaEdgesCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBuilding)
                    .addComponent(sumRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(avgRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMin)
                    .addComponent(minSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMax)
                    .addComponent(maxSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoMetaEdgesCheckbox;
    private javax.swing.JRadioButton avgRadio;
    private javax.swing.ButtonGroup buttonGroup1;
    private org.jdesktop.swingx.JXHeader jXHeader1;
    private javax.swing.JLabel labelBuilding;
    private javax.swing.JLabel labelEnable;
    private javax.swing.JLabel labelMax;
    private javax.swing.JLabel labelMin;
    private javax.swing.JSpinner maxSpinner;
    private javax.swing.JSpinner minSpinner;
    private javax.swing.JRadioButton sumRadio;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
